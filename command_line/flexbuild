#!/bin/bash

 read -p "WARNING: This operation will delete your current flex++ files! Press \"i\" to continue. Or press \"y\" to prevent auto inserting and generate clean.
" answer
	case $answer in
	("i")
		cd scanner
		echo "rm -f lex.cc Scanner.ih Scanner.h Scannerbase.h"
		rm -f lex.cc Scanner.ih Scanner.h Scannerbase.h
		echo "flexc++ lexer"
		flexc++ lexer

		echo "inserting into Scanner.h"
		sed -i 's/#include "Scannerbase.h"/#include "Scannerbase.h"\n#include "..\/parser\/Parserbase.h"\n#include <sstream>/' Scanner.h
		sed -i 's/Scanner(std::string const &infile, std::string const &outfile);/Scanner(std::string const \&infile, std::ostream \&out);\n\t\tScanner(std::string const \&infile, std::string const \&outfile);\n\t\tScanner(std::stringstream \&ss, std::ostream \&out);/' Scanner.h
		sed -i 's/inline Scanner::Scanner(std::string const &infile, std::string const &outfile)/inline Scanner::Scanner(std::string const \&infile, std::ostream \&out)\n:\n\tScannerBase(infile, out)\n{}\n\ninline Scanner::Scanner(std::stringstream \&ss, std::ostream \&out)\n:\n\tScannerBase(ss, out)\n{}\n\ninline Scanner::Scanner(std::string const \&infile, std::string const \&outfile)/' Scanner.h

		echo "inserting into Scannerbase.h"
		sed -i 's/ScannerBase(std::string const &infilename, std::string const &outfilename);/ScannerBase(std::string const \&infilename, std::string const \&outfilename);\n\tScannerBase(std::stringstream \&ss, std::ostream \&out);\n\tScannerBase(std::string const \&infilename, std::ostream \&out);/' Scannerbase.h
		sed -i 's/void                switchIstream(std::string const &infilename);/void                switchIstream(std::istream \&in);\n\tvoid                switchIstream(std::string const \&infilename);/' Scannerbase.h

		echo "inserting into lex.cc"
		sed -i 's/void ScannerBase::switchStream__(std::istream &in, size_t lineNr)/ScannerBase::ScannerBase(std::string const \&infilename, std::ostream \&out)\n:\n\td_filename(infilename),\n\td_out(new std::ostream(out.rdbuf())),\n\td_input(new std::ifstream(infilename)),\n\td_dfaBase__(s_dfa__)\n{}\n\nScannerBase::ScannerBase(std::stringstream \&ss, std::ostream \&out)\n:\n\td_filename("-"),\n\td_out(new std::ostream(out.rdbuf())),\n\td_in(\&ss),\n\td_input(new std::stringstream(ss.rdbuf()->str())),\n\td_dfaBase__(s_dfa__)\n{}\n\nvoid ScannerBase::switchStream__(std::istream \&in, size_t lineNr)/' lex.cc
		sed -i 's/void ScannerBase::switchIstream(std::string const &infilename)/void ScannerBase::switchIstream(std::istream \&in)\n{\n\tswitchStream__(in, 1);\n}\n\nvoid ScannerBase::switchIstream(std::string const \&infilename)/' lex.cc
		sed -i 's/#include <stdexcept>/#include <stdexcept>\n#include "..\/shell.hh"/' lex.cc

		cd ..
	;;
	("y")
		cd scanner
		echo "rm -f lex.cc Scanner.ih Scanner.h Scannerbase.h"
		rm -f lex.cc Scanner.ih Scanner.h Scannerbase.h
		echo "flexc++ lexer"
		flexc++ lexer
		cd ..
	;;
	(*)
		echo "Operation aborted."
	;;
	esac
	