A series of elements normally use left-recursion. For example, bf(C++)
supports em(string concatenation): series of double quote delimited tt(ASCII)
characters define a string, and multiple white-space delimited strings are
handled as one single string:
        verb(
    "hello"         // multiple ws-delimited strings
    " " 
    "world"

    "hello world"   // same thing
        )
    Usually a parser is responsible for concatenating the individual
string-parts, receiving one or more tt(STRING) tokens from the lexical
scanner. A tt(string) rule handles one or more incoming tt(STRING) tokens:
        verb(
    string:
        STRING
    |
        string STRING
        )
    The above rule can be used as a prototype for recognizing a series of
elements. The token tt(STRING) may of course be embedded in another rule. The
generic form of this rule could be formulated as follows:
        verb(
    series:
        unit
    |
        series unit
        )
    Note that the single element is em(first) recognized, whereafter the
left-recursive alternative may be recognized repeatedly.
