


Production Rules:
    1: input ->    <empty>
    2: input -> input line
    3: line -> '\n'
    4: line -> exp '\n'
    5: line -> error '\n'
    6: exp -> NUM
    7: exp -> VAR
    8: exp -> VAR '=' exp
    9: exp -> FNCT '(' exp ')'
    10: exp -> exp '+' exp
    11: exp -> exp '-' exp
    12: exp -> exp '*' exp
    13: exp -> exp '/' exp
    14: exp -> '-' exp
    15: exp -> exp '^' exp
    16: exp -> '(' exp ')'
    17: input_$ -> input


GRAMMAR STATES:

State 0

    input_$ ->  . input   (rule 17)
              Lookahead set { <EOF> }

    All production rules (using dot == 0) of:
      input   Lookahead set { errTok__ NUM VAR FNCT '-' '\n' '(' <EOF> }

    on input:    shift, and go to state 1

    _default_:   reduce, using production
                1: input ->    <empty>

State 1

    input_$ -> input  .   (rule 17)
              Lookahead set { <EOF> }

    input -> input  . line   (rule 2)
              Lookahead set { errTok__ NUM VAR FNCT '-' '\n' '(' <EOF> }

    All production rules (using dot == 0) of:
      exp     Lookahead set { '-' '+' '*' '/' '^' '\n' }
      line    Lookahead set { errTok__ NUM VAR FNCT '-' '\n' '(' <EOF> }

    on errTok__:  shift, and go to state 2
    on NUM:      shift, and go to state 3
    on VAR:      shift, and go to state 4
    on FNCT:     shift, and go to state 5
    on '-':      shift, and go to state 7
    on '\n':     shift, and go to state 9
    on '(':      shift, and go to state 10
    on exp:      shift, and go to state 6
    on line:     shift, and go to state 8

State 2 (inherited terminal: errTok__)

    line -> errTok__  . '\n'   (rule 5)
              Lookahead set { errTok__ NUM VAR FNCT '-' '\n' '(' <EOF> }

    on '\n':     shift, and go to state 11

State 3 (inherited terminal: NUM)

    exp -> NUM  .   (rule 6)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }


    _default_:   reduce, using production
                6: exp -> NUM

State 4 (inherited terminal: VAR)

    exp -> VAR  .   (rule 7)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }

    exp -> VAR  . '=' exp   (rule 8)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }

    on '=':      shift, and go to state 12

    _default_:   reduce, using production
                7: exp -> VAR

State 5 (inherited terminal: FNCT)

    exp -> FNCT  . '(' exp ')'   (rule 9)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }

    on '(':      shift, and go to state 13

State 6

    exp -> exp  . '+' exp   (rule 10)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '-' exp   (rule 11)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '*' exp   (rule 12)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '/' exp   (rule 13)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '^' exp   (rule 15)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    line -> exp  . '\n'   (rule 4)
              Lookahead set { errTok__ NUM VAR FNCT '-' '\n' '(' <EOF> }

    on '-':      shift, and go to state 14
    on '+':      shift, and go to state 15
    on '*':      shift, and go to state 16
    on '/':      shift, and go to state 17
    on '^':      shift, and go to state 18
    on '\n':     shift, and go to state 19

State 7 (inherited terminal: '-')

    exp -> '-'  . exp   (rule 14)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }

    All production rules (using dot == 0) of:
      exp     Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on NUM:      shift, and go to state 3
    on VAR:      shift, and go to state 4
    on FNCT:     shift, and go to state 5
    on '-':      shift, and go to state 7
    on '(':      shift, and go to state 10
    on exp:      shift, and go to state 20

State 8

    input -> input line  .   (rule 2)
              Lookahead set { errTok__ NUM VAR FNCT '-' '\n' '(' <EOF> }


    _default_:   reduce, using production
                2: input -> input line

State 9 (inherited terminal: '\n')

    line -> '\n'  .   (rule 3)
              Lookahead set { errTok__ NUM VAR FNCT '-' '\n' '(' <EOF> }


    _default_:   reduce, using production
                3: line -> '\n'

State 10 (inherited terminal: '(')

    exp -> '('  . exp ')'   (rule 16)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }

    All production rules (using dot == 0) of:
      exp     Lookahead set { '-' '+' '*' '/' '^' ')' }

    on NUM:      shift, and go to state 3
    on VAR:      shift, and go to state 4
    on FNCT:     shift, and go to state 5
    on '-':      shift, and go to state 7
    on '(':      shift, and go to state 10
    on exp:      shift, and go to state 21

State 11 (inherited terminal: '\n')

    line -> errTok__ '\n'  .   (rule 5)
              Lookahead set { errTok__ NUM VAR FNCT '-' '\n' '(' <EOF> }


    _default_:   reduce, using production
                5: line -> error '\n'

State 12 (inherited terminal: '=')

    exp -> VAR '='  . exp   (rule 8)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    All production rules (using dot == 0) of:
      exp     Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on NUM:      shift, and go to state 3
    on VAR:      shift, and go to state 4
    on FNCT:     shift, and go to state 5
    on '-':      shift, and go to state 7
    on '(':      shift, and go to state 10
    on exp:      shift, and go to state 22

State 13 (inherited terminal: '(')

    exp -> FNCT '('  . exp ')'   (rule 9)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    All production rules (using dot == 0) of:
      exp     Lookahead set { '-' '+' '*' '/' '^' ')' }

    on NUM:      shift, and go to state 3
    on VAR:      shift, and go to state 4
    on FNCT:     shift, and go to state 5
    on '-':      shift, and go to state 7
    on '(':      shift, and go to state 10
    on exp:      shift, and go to state 23

State 14 (inherited terminal: '-')

    exp -> exp '-'  . exp   (rule 11)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }

    All production rules (using dot == 0) of:
      exp     Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on NUM:      shift, and go to state 3
    on VAR:      shift, and go to state 4
    on FNCT:     shift, and go to state 5
    on '-':      shift, and go to state 7
    on '(':      shift, and go to state 10
    on exp:      shift, and go to state 24

State 15 (inherited terminal: '+')

    exp -> exp '+'  . exp   (rule 10)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }

    All production rules (using dot == 0) of:
      exp     Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on NUM:      shift, and go to state 3
    on VAR:      shift, and go to state 4
    on FNCT:     shift, and go to state 5
    on '-':      shift, and go to state 7
    on '(':      shift, and go to state 10
    on exp:      shift, and go to state 25

State 16 (inherited terminal: '*')

    exp -> exp '*'  . exp   (rule 12)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }

    All production rules (using dot == 0) of:
      exp     Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on NUM:      shift, and go to state 3
    on VAR:      shift, and go to state 4
    on FNCT:     shift, and go to state 5
    on '-':      shift, and go to state 7
    on '(':      shift, and go to state 10
    on exp:      shift, and go to state 26

State 17 (inherited terminal: '/')

    exp -> exp '/'  . exp   (rule 13)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }

    All production rules (using dot == 0) of:
      exp     Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on NUM:      shift, and go to state 3
    on VAR:      shift, and go to state 4
    on FNCT:     shift, and go to state 5
    on '-':      shift, and go to state 7
    on '(':      shift, and go to state 10
    on exp:      shift, and go to state 27

State 18 (inherited terminal: '^')

    exp -> exp '^'  . exp   (rule 15)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }

    All production rules (using dot == 0) of:
      exp     Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on NUM:      shift, and go to state 3
    on VAR:      shift, and go to state 4
    on FNCT:     shift, and go to state 5
    on '-':      shift, and go to state 7
    on '(':      shift, and go to state 10
    on exp:      shift, and go to state 28

State 19 (inherited terminal: '\n')

    line -> exp '\n'  .   (rule 4)
              Lookahead set { errTok__ NUM VAR FNCT '-' '\n' '(' <EOF> }


    _default_:   reduce, using production
                4: line -> exp '\n'

State 20 (inherited terminal: '-')

    exp -> '-' exp  .   (rule 14)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '+' exp   (rule 10)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '-' exp   (rule 11)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '*' exp   (rule 12)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '/' exp   (rule 13)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '^' exp   (rule 15)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on '^':      shift, and go to state 18

    _default_:   reduce, using production
                14: exp -> '-' exp

    Actions suppressed by the default conflict resolution procedures:
    [on '^':      reduce, using production
                14: exp -> '-' exp]

State 21 (inherited terminal: '(')

    exp -> '(' exp  . ')'   (rule 16)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }

    exp -> exp  . '+' exp   (rule 10)
              Lookahead set { '-' '+' '*' '/' '^' ')' }

    exp -> exp  . '-' exp   (rule 11)
              Lookahead set { '-' '+' '*' '/' '^' ')' }

    exp -> exp  . '*' exp   (rule 12)
              Lookahead set { '-' '+' '*' '/' '^' ')' }

    exp -> exp  . '/' exp   (rule 13)
              Lookahead set { '-' '+' '*' '/' '^' ')' }

    exp -> exp  . '^' exp   (rule 15)
              Lookahead set { '-' '+' '*' '/' '^' ')' }

    on '-':      shift, and go to state 14
    on '+':      shift, and go to state 15
    on '*':      shift, and go to state 16
    on '/':      shift, and go to state 17
    on '^':      shift, and go to state 18
    on ')':      shift, and go to state 29

State 22 (inherited terminal: '=')

    exp -> VAR '=' exp  .   (rule 8)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '+' exp   (rule 10)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '-' exp   (rule 11)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '*' exp   (rule 12)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '/' exp   (rule 13)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '^' exp   (rule 15)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on '-':      shift, and go to state 14
    on '+':      shift, and go to state 15
    on '*':      shift, and go to state 16
    on '/':      shift, and go to state 17
    on '^':      shift, and go to state 18

    _default_:   reduce, using production
                8: exp -> VAR '=' exp

    Actions suppressed by the default conflict resolution procedures:
    [on '-':      reduce, using production
                8: exp -> VAR '=' exp]
    [on '+':      reduce, using production
                8: exp -> VAR '=' exp]
    [on '*':      reduce, using production
                8: exp -> VAR '=' exp]
    [on '/':      reduce, using production
                8: exp -> VAR '=' exp]
    [on '^':      reduce, using production
                8: exp -> VAR '=' exp]

State 23 (inherited terminal: '(')

    exp -> FNCT '(' exp  . ')'   (rule 9)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '+' exp   (rule 10)
              Lookahead set { '-' '+' '*' '/' '^' ')' }

    exp -> exp  . '-' exp   (rule 11)
              Lookahead set { '-' '+' '*' '/' '^' ')' }

    exp -> exp  . '*' exp   (rule 12)
              Lookahead set { '-' '+' '*' '/' '^' ')' }

    exp -> exp  . '/' exp   (rule 13)
              Lookahead set { '-' '+' '*' '/' '^' ')' }

    exp -> exp  . '^' exp   (rule 15)
              Lookahead set { '-' '+' '*' '/' '^' ')' }

    on '-':      shift, and go to state 14
    on '+':      shift, and go to state 15
    on '*':      shift, and go to state 16
    on '/':      shift, and go to state 17
    on '^':      shift, and go to state 18
    on ')':      shift, and go to state 30

State 24 (inherited terminal: '-')

    exp -> exp '-' exp  .   (rule 11)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '+' exp   (rule 10)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '-' exp   (rule 11)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '*' exp   (rule 12)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '/' exp   (rule 13)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '^' exp   (rule 15)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on '*':      shift, and go to state 16
    on '/':      shift, and go to state 17
    on '^':      shift, and go to state 18

    _default_:   reduce, using production
                11: exp -> exp '-' exp

    Actions suppressed by the default conflict resolution procedures:
    [on '*':      reduce, using production
                11: exp -> exp '-' exp]
    [on '/':      reduce, using production
                11: exp -> exp '-' exp]
    [on '^':      reduce, using production
                11: exp -> exp '-' exp]

State 25 (inherited terminal: '+')

    exp -> exp '+' exp  .   (rule 10)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '+' exp   (rule 10)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '-' exp   (rule 11)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '*' exp   (rule 12)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '/' exp   (rule 13)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '^' exp   (rule 15)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on '*':      shift, and go to state 16
    on '/':      shift, and go to state 17
    on '^':      shift, and go to state 18

    _default_:   reduce, using production
                10: exp -> exp '+' exp

    Actions suppressed by the default conflict resolution procedures:
    [on '*':      reduce, using production
                10: exp -> exp '+' exp]
    [on '/':      reduce, using production
                10: exp -> exp '+' exp]
    [on '^':      reduce, using production
                10: exp -> exp '+' exp]

State 26 (inherited terminal: '*')

    exp -> exp '*' exp  .   (rule 12)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '+' exp   (rule 10)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '-' exp   (rule 11)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '*' exp   (rule 12)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '/' exp   (rule 13)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '^' exp   (rule 15)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on '^':      shift, and go to state 18

    _default_:   reduce, using production
                12: exp -> exp '*' exp

    Actions suppressed by the default conflict resolution procedures:
    [on '^':      reduce, using production
                12: exp -> exp '*' exp]

State 27 (inherited terminal: '/')

    exp -> exp '/' exp  .   (rule 13)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '+' exp   (rule 10)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '-' exp   (rule 11)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '*' exp   (rule 12)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '/' exp   (rule 13)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '^' exp   (rule 15)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on '^':      shift, and go to state 18

    _default_:   reduce, using production
                13: exp -> exp '/' exp

    Actions suppressed by the default conflict resolution procedures:
    [on '^':      reduce, using production
                13: exp -> exp '/' exp]

State 28 (inherited terminal: '^')

    exp -> exp '^' exp  .   (rule 15)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }

    exp -> exp  . '+' exp   (rule 10)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '-' exp   (rule 11)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '*' exp   (rule 12)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '/' exp   (rule 13)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    exp -> exp  . '^' exp   (rule 15)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }

    on '^':      shift, and go to state 18

    _default_:   reduce, using production
                15: exp -> exp '^' exp

    Actions suppressed by the default conflict resolution procedures:
    [on '^':      reduce, using production
                15: exp -> exp '^' exp]

State 29 (inherited terminal: ')')

    exp -> '(' exp ')'  .   (rule 16)
              Lookahead set { '-' '+' '*' '/' '^' '\n' ')' }


    _default_:   reduce, using production
                16: exp -> '(' exp ')'

State 30 (inherited terminal: ')')

    exp -> FNCT '(' exp ')'  .   (rule 9)
              Lookahead set { '-' '+' '*' '/' '^' '\n' }


    _default_:   reduce, using production
                9: exp -> FNCT '(' exp ')'

