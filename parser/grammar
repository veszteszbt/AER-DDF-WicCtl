%baseclass-preinclude "semantics.h"
%lsp-needed

%scanner ../scanner/Scanner.h


%union
{
	std::string *str;
}

%token KEYWORD_IF
%token KEYWORD_THEN
%token KEYWORD_ELSE
%token KEYWORD_ELIF
%token KEYWORD_FI
%token KEYWORD_CASE
%token KEYWORD_IN
%token KEYWORD_ESAC
%token KEYWORD_FOR
%token KEYWORD_WHILE
%token KEYWORD_UNTIL
%token KEYWORD_DO
%token KEYWORD_DONE
%token OCURLY
%token CCURLY
%token PIPE_SYMBOL
%token ANDF_SYMBOL
%token ORF_SYMBOL
%token COMMAND_SEPARATOR
%token CASE_DELIMITER
%token BACKGROUND_COMMANDS
%token OPARENTHESIS
%token CPARENTHESIS
%token INPUT_REDIRECTION
%token INPUT_FROM_A_HERE_DOCUMENT
%token OUTPUT_CREATION
%token OUTPUT_APPEND
%token SINGLEQUOTE
%token DOUBLEQUOTE
%token DOUBLE
%token INTEGER
%token <str> IDENTIFIER
%token NEGATE
%token HEXADECIMAL
%token OSQ
%token CSQ

%token KEYWORD_LET

%right OPERATOR_LET_BE
%left OPERATOR_AND OPERATOR_OR
%left OPERATOR_EQUAL OPERATOR_GREATER_THAN OPERATOR_LESS_THAN OPERATOR_GREATER_EQUAL OPERATOR_LESS_EQUAL OPERATOR_NOT_EQUAL
%left OPERATOR_PLUS OPERATOR_MINUS
%left OPERATOR_MULTIPLICATION OPERATOR_DIVISION OPERATOR_MODULO
%left OPERATOR_POWER
%right UNARY_MINUS


%%


start:
	IDENTIFIER COMMAND_SEPARATOR
	{
		std::cout << "command_list" << std::endl;
	}
;
