// Generated by Bisonc++ V5.00.00 on Sun, 03 Apr 2016 17:49:17 +0200

#ifndef Parser_h_included
#define Parser_h_included

// $insert baseclass
#include "parserbase.h"
// $insert scanner.h
#include "../scanner/scanner.h"


#undef Parser
class Parser: public ParserBase
{
    // $insert scannerobject
    Scanner d_scanner;
        
    public:
        int parse();

    private:
        void error();                   // called on (syntax) errors
        int lex();                      // returns the next token from the
                                        // lexical scanner. 
        void print();                   // use, e.g., d_token, d_loc
        void prompt();
        void done();

    // support functions for parse():
        void executeAction__(int ruleNr);
        void errorRecovery__();
        void nextCycle__();
        void nextToken__();
        void print__();
        void exceptionHandler(std::exception const &exc);
};

inline void Parser::prompt()
{
    std::cout << "? " << std::flush;
}

inline void Parser::done()
{
    std::cout << "Done\n";
    ACCEPT();
}


#endif
